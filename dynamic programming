#include <iostream>
#include <vector>

using namespace std;

string longest_common_substring(string str1, string str2) {
    int m = str1.length();
    int n = str2.length();
    vector<vector<int>> dp(m+1, vector<int>(n+1, 0)); // initialize a 2D lookup table with zeros
    int max_len = 0, end_pos = 0;

    for (int i = 1; i <= m; i++) {
        for (int j = 1; j <= n; j++) {
            if (str1[i-1] == str2[j-1]) {
                dp[i][j] = dp[i-1][j-1] + 1;
                if (dp[i][j] > max_len) {
                    max_len = dp[i][j];
                    end_pos = i;
                }
            }
            else {
                dp[i][j] = 0;
            }
        }
    }

    return str1.substr(end_pos-max_len, max_len);
}

int main() {
    string str1 = "ABCDEF";
    string str2 = "XYZDEF";
    string lcs = longest_common_substring(str1, str2);
    cout << "The longest common substring between " << str1 << " and " << str2 << " is: " << lcs << endl;

    return 0;
}
